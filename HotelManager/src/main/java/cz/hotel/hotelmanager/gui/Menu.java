/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.hotel.hotelmanager.gui;

import cz.hotel.hotelmanager.builder.RoomBuilder;
import cz.hotel.hotelmanager.entity.Room;
import cz.hotel.hotelmanager.manager.GuestManager;
import cz.hotel.hotelmanager.manager.GuestManagerImpl;
import cz.hotel.hotelmanager.manager.HotelManager;
import cz.hotel.hotelmanager.manager.HotelManagerImpl;
import cz.hotel.hotelmanager.manager.RoomManager;
import cz.hotel.hotelmanager.manager.RoomManagerImpl;
import java.io.InputStream;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.concurrent.ExecutionException;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import org.apache.derby.jdbc.EmbeddedDataSource;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


public class Menu extends javax.swing.JFrame {

    private EmbeddedDataSource source = null;
    private HotelManager manager = null;
    private GuestManager guestManager = null;
    private RoomManager roomManager = null;
    private static final Logger logger = LoggerFactory.getLogger(Menu.class);
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        DatabaseSetup data = new DatabaseSetup();
        data.execute();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        mainMenu = new javax.swing.JPanel();
        btnViewGuest = new javax.swing.JButton();
        btnViewRooms = new javax.swing.JButton();
        btnCheckIn = new javax.swing.JButton();
        btnAddGuest = new javax.swing.JButton();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("cz/hotel/hotelmanager/gui/Bundle"); // NOI18N
        jMenu1.setText(bundle.getString("Menu.jMenu1.text")); // NOI18N

        jMenu2.setText(bundle.getString("Menu.jMenu2.text")); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.lightGray);

        mainMenu.setBackground(java.awt.Color.lightGray);

        btnViewGuest.setText(bundle.getString("Menu.btnViewGuest.text")); // NOI18N
        btnViewGuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewGuestActionPerformed(evt);
            }
        });

        btnViewRooms.setText(bundle.getString("Menu.btnViewRooms.text")); // NOI18N
        btnViewRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRoomsActionPerformed(evt);
            }
        });

        btnCheckIn.setText(bundle.getString("Menu.btnCheckIn.text")); // NOI18N
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });

        btnAddGuest.setText(bundle.getString("Menu.btnAddGuest.text")); // NOI18N
        btnAddGuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGuestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuLayout = new javax.swing.GroupLayout(mainMenu);
        mainMenu.setLayout(mainMenuLayout);
        mainMenuLayout.setHorizontalGroup(
            mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCheckIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewGuest, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                .addGap(102, 102, 102)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnViewRooms, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(btnAddGuest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainMenuLayout.setVerticalGroup(
            mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnViewRooms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewGuest, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCheckIn, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(btnAddGuest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewGuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewGuestActionPerformed
        guiGuestView g = new guiGuestView();
        g.setRoomManager(roomManager);
        g.setHotelManager(manager);
        g.setGuestManager(guestManager);
        g.ready();
        g.setVisible(true);
        g.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnViewGuestActionPerformed

    private void btnAddGuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGuestActionPerformed
        GuestCreation g = new GuestCreation();
        g.setVisible(true);
        g.setGuestManager(guestManager);
        g.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnAddGuestActionPerformed

    private void btnViewRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRoomsActionPerformed
        guiRoomView g = new guiRoomView();
        g.setRoomManager(roomManager);
        g.setHotelManager(manager);
        g.setGuestManager(guestManager);
        g.ready();
        g.setVisible(true);
        g.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnViewRoomsActionPerformed

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed
        guiCheckIn g = new guiCheckIn();
        g.setRoomManager(roomManager);
        g.setHotelManager(manager);
        g.setGuestManager(guestManager);
        g.ready();
        g.setVisible(true);
        g.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnCheckInActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            logger.error(ex.getMessage());
        } catch (InstantiationException ex) {
            logger.error(ex.getMessage());
        } catch (IllegalAccessException ex) {
            logger.error(ex.getMessage());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            logger.error(ex.getMessage());
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            
            public void run() {
                Menu men = new Menu();
                men.setVisible(true);
                men.setLocationRelativeTo(null);
            }
        });
    }
    
    private void setOne(JPanel panel) {
        mainMenu.setVisible(false);
        panel.setVisible(true);
    }
    
    private class DatabaseSetup extends SwingWorker<EmbeddedDataSource, Void> {

        private EmbeddedDataSource source;
    
        private void databaseSetUp() {
            source = new EmbeddedDataSource();
            source.setDatabaseName("memory:guest-mgr-test");
            source.setCreateDatabase("create");
        }

        private void loadSQLFile(String fileName) throws SQLException {
            InputStream is = GuestManager.class.getResourceAsStream(fileName);

            Scanner s = new Scanner(is).useDelimiter(";");

            try(Connection conn = source.getConnection()) {
                while(s.hasNext()) {
                    String sql = s.next();
                    sql = sql.trim();
                    if (sql.isEmpty()) continue;
                    try(PreparedStatement state = conn.prepareStatement(sql)) {
                        state.execute();
                    }
                }
            }
        }

        @Override
        protected EmbeddedDataSource doInBackground() {
            databaseSetUp();
            try {
                loadSQLFile("createTables.sql");
            } catch (SQLException ex) {
                logger.error(ex.getMessage());
            }
            return source;
        }
        
        @Override
        protected void done() {
            try {
                EmbeddedDataSource source = get();
                manager = new HotelManagerImpl(source);
                roomManager = new RoomManagerImpl(source);
                guestManager = new GuestManagerImpl(source);
            } catch (InterruptedException ex) {
                logger.error(ex.getMessage());
            } catch (ExecutionException ex) {
                logger.error(ex.getMessage());
            }
            new SwingWorker<Void, Void>() {
                @Override
                protected Void doInBackground() throws Exception {
                    RoomBuilder build = new RoomBuilder();
                    build.capacity(5).price(BigDecimal.valueOf(1000)).roomType("Normal");
                    List<Room> list = new ArrayList<>();
                    list.add(build.roomNumber(101).build());
                    list.add(build.roomNumber(102).build());
                    list.add(build.roomNumber(103).build());
                    list.add(build.roomNumber(104).build());
                    list.add(build.roomNumber(105).build());
                    list.add(build.roomNumber(106).build());
                    list.add(build.roomNumber(107).build());
                    for (Room el: list) {
                        manager.addRoom(el);
                    }
                    return null;
                }
                
                @Override
                protected void done() {
                    try {
                        get();
                    } catch (InterruptedException ex) {
                        logger.error(ex.getMessage());
                    } catch (ExecutionException ex) {
                        logger.error(ex.getMessage());
                    }
                }
            }.execute();
            
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddGuest;
    private javax.swing.JButton btnCheckIn;
    private javax.swing.JButton btnViewGuest;
    private javax.swing.JButton btnViewRooms;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainMenu;
    // End of variables declaration//GEN-END:variables
}
