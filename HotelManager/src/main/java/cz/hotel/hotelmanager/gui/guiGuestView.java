/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.hotel.hotelmanager.gui;

import cz.hotel.hotelmanager.entity.Guest;
import cz.hotel.hotelmanager.entity.Room;
import cz.hotel.hotelmanager.manager.GuestManager;
import cz.hotel.hotelmanager.manager.HotelManager;
import cz.hotel.hotelmanager.manager.RoomManager;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import javax.swing.SwingWorker;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


public class guiGuestView extends javax.swing.JFrame {

    private RoomManager roomManager = null;
    private HotelManager manager = null;
    private GuestManager guestManager = null;
    Guest wanted = null;
    List<Guest> guests = null;
    private static final Logger logger = LoggerFactory.getLogger(guiGuestView.class);

    public void setGuestManager(GuestManager guestManager) {
        this.guestManager = guestManager;
    }
    

    public void setHotelManager(HotelManager manager) {
        this.manager = manager;
    }

    public void setRoomManager(RoomManager roomManager) {
        this.roomManager = roomManager;
    }
    /**
     * Creates new form guiGuestView
     */
    public guiGuestView() {
        initComponents();
    }
    
    public void ready() {
        new SwingWorker<List<String>, Void>() {
            @Override
            protected List<String> doInBackground() throws Exception {
                guests = guestManager.findAllGuests();
                List<String> names = new ArrayList<>();
                for (Guest el: guests) {
                    names.add(el.getName());
                }
                return names;
            }
            
            @Override
            protected void done() {
                
                try {
                    comboGuest.removeAllItems();
                    List<String> names;
                    names = get();
                    names.forEach((el) -> {
                        comboGuest.addItem(el);
                    });
                } catch (InterruptedException ex) {
                    logger.error(ex.getMessage());
                } catch (ExecutionException ex) {
                    logger.error(ex.getMessage());
                }
                
            }
            
        }.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonSave = new javax.swing.JButton();
        buttonCheckOut = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        labelAddress = new javax.swing.JLabel();
        labelPhoneNum = new javax.swing.JLabel();
        labelRoomNum = new javax.swing.JLabel();
        txtValName = new javax.swing.JTextField();
        txtValAddress = new javax.swing.JTextField();
        txtValPhoneNum = new javax.swing.JTextField();
        labelValRoomNum = new javax.swing.JLabel();
        comboGuest = new javax.swing.JComboBox<>();
        labelGuest = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("cz/hotel/hotelmanager/gui/Bundle"); // NOI18N
        buttonSave.setText(bundle.getString("guiGuestView.buttonSave.text")); // NOI18N
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonCheckOut.setText(bundle.getString("guiGuestView.buttonCheckOut.text")); // NOI18N
        buttonCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCheckOutActionPerformed(evt);
            }
        });

        buttonCancel.setText(bundle.getString("guiGuestView.buttonCancel.text")); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        labelName.setText(bundle.getString("guiGuestView.labelName.text")); // NOI18N

        labelAddress.setText(bundle.getString("guiGuestView.labelAddress.text")); // NOI18N

        labelPhoneNum.setText(bundle.getString("guiGuestView.labelPhoneNum.text")); // NOI18N

        labelRoomNum.setText(bundle.getString("guiGuestView.labelRoomNum.text")); // NOI18N

        labelValRoomNum.setText(bundle.getString("guiGuestView.labelValRoomNum.text")); // NOI18N

        comboGuest.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboGuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGuestActionPerformed(evt);
            }
        });

        labelGuest.setText(bundle.getString("guiGuestView.labelGuest.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboGuest, 0, 230, Short.MAX_VALUE)
                    .addComponent(labelGuest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelRoomNum, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(labelPhoneNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtValName, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                        .addComponent(txtValAddress, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtValPhoneNum, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(labelValRoomNum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName)
                    .addComponent(txtValName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelGuest))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelAddress)
                        .addComponent(comboGuest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtValAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPhoneNum)
                    .addComponent(txtValPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRoomNum)
                    .addComponent(labelValRoomNum))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(buttonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        String name = txtValName.getText();
        String address = txtValAddress.getText();
        String phoneNum = txtValPhoneNum.getText();
        if (name.isEmpty() || address.isEmpty() || phoneNum.isEmpty() || wanted == null) {
            logger.error("Name, Address or Phone Number is invalid!");
            return;
        }
        wanted.setName(name);
        wanted.setAddress(address);
        wanted.setPhoneNumber(phoneNum);
        new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                guestManager.updateGuest(wanted);
                return null;
            }
            
            @Override
            protected void done() {
                try {
                    get();
                } catch (InterruptedException ex) {
                    logger.error(ex.getMessage());
                } catch (ExecutionException ex) {
                    logger.error(ex.getMessage());
                }
            }
            
        }.execute();
        this.setVisible(false);
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCheckOutActionPerformed
        if (wanted == null || wanted.getRoomId() == null) {
            logger.error("Selected guest has no room assigned! Cannot checkout!");
            return;
        }
        new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                manager.checkOutGuest(wanted);
                return null;
            }
            
            @Override
            protected void done() {
                try {
                    get();
                    wanted.setRoomId(null);
                } catch (InterruptedException ex) {
                    logger.error(ex.getMessage());
                } catch (ExecutionException ex) {
                    logger.error(ex.getMessage());
                }
            }
            
        }.execute();
        this.setVisible(false);
    }//GEN-LAST:event_buttonCheckOutActionPerformed

    private void comboGuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGuestActionPerformed
        String name = (String) comboGuest.getSelectedItem();
        if (guests == null || name == null || guests.isEmpty()) return;
        for (Guest el: guests) {
            if (el.getName().equals(name)) {
                wanted = el;
                break;
            }
        }
        new SwingWorker<Room, Void>() {
            @Override
            protected Room doInBackground() throws Exception {
                Room room = manager.findRoomWithGuest(wanted);
                return room;
            }
            
            @Override
            protected void done() {
                try {
                    if (get() == null) {
                        labelValRoomNum.setText("");
                        return;
                    }
                    labelValRoomNum.setText(Integer.toString(get().getRoomNumber()));
                } catch (InterruptedException ex) {
                    logger.error(ex.getMessage());
                } catch (ExecutionException ex) {
                    logger.error(ex.getMessage());
                }
            }
            
        }.execute();
        txtValName.setText(wanted.getName());
        txtValAddress.setText(wanted.getAddress());
        txtValPhoneNum.setText(wanted.getPhoneNumber());
    }//GEN-LAST:event_comboGuestActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonCheckOut;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox<String> comboGuest;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelAddress;
    private javax.swing.JLabel labelGuest;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPhoneNum;
    private javax.swing.JLabel labelRoomNum;
    private javax.swing.JLabel labelValRoomNum;
    private javax.swing.JTextField txtValAddress;
    private javax.swing.JTextField txtValName;
    private javax.swing.JTextField txtValPhoneNum;
    // End of variables declaration//GEN-END:variables
}
